<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>梦开始的地方</title>
      <link href="/2021/10/05/%E6%A2%A6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9C%B0%E6%96%B9/"/>
      <url>/2021/10/05/%E6%A2%A6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9C%B0%E6%96%B9/</url>
      
        <content type="html"><![CDATA[<p><code>ZYen</code>的小站自今天起就正式开张啦！之前买服务器搭博客不得劲，现在正式转为<code>github</code>辽，文章的日期可能有点问题，不过无伤大雅，愿自己热爱的事情最终都能有个好结果！（撒花✨）</p>]]></content>
      
      
      
        <tags>
            
            <tag> -杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/09/30/%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/"/>
      <url>/2021/09/30/%E5%BB%B6%E8%BF%9F%E7%BB%91%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<p>延迟绑定</p><p>程序在动态载入内存的时候并不会将所有函数都加载进内存，而是采用延时绑定的机制，即当真正使用当该函数的时候才将GOT表中的地址转化成真实的地址，</p><p>写一个简单的demo进行测试：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"> <span class="built_in">puts</span>(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//gcc -m32 -no-pie -g -o got_plt got_plt.c </span></span><br></pre></td></tr></table></figure><p>编译完成后，我们进入gdb进行调试，先将程序反汇编，我们来看看在那下断点合适，我们既然要研究plt 和got 表，那肯定要断在call put这条汇编指令这吧，下断点我们来看看</p><p><img src="D:\applicance\essential\typora\img\动态绑定\3.png" alt="3"></p><p>下完断点，我们运行起来，单步步入就来到图中的地方，它先跳到_GLOBAL_OFFSET_TABLE_里面，也就是我们说的GOT表，那它会JMP到哪里去呢？等下揭晓….</p><p><img src="D:\applicance\essential\typora\img\动态绑定\1.png" alt="1"></p><p>我们用pwndbg查看一下这个位置存了什么，是不是有点眼熟，这不就是刚刚JMP的下一条指令的地方吗？没错它又跳回来了…紧接着它push了一个参数又往下跳转了，又push了一个参数就跳到_dl_runtime_resolve_这个函数里面，在这就不详细的阐述_dl_runtime_resolve_函数的具体实现，咱只要记得是这个函数帮我们把GOT表里面的值换成了真实的函数地址</p><p><img src="D:\applicance\essential\typora\img\动态绑定\2.png" alt="2"></p><p>我们在此函数执行完成之后再去看0x804a00c里面存的是什么，对吧…现在就是真实的函数地址</p><p><img src="D:\applicance\essential\typora\img\动态绑定\4.png" alt="4"></p><p>如果还是保持怀疑，我们反汇编进去看看，是put函数的实现对吧…</p><p><img src="D:\applicance\essential\typora\img\动态绑定\5.png" alt="5"></p><p>最后提一嘴，GOT表只是存放函数地址的表而已，真正的调用是需要通过PLT表来进行跳转</p><p>下面是一位大佬画的图就拿来用了</p><p><img src="D:\applicance\essential\typora\img\动态绑定\5970003-bcf9343191848103.png" alt="5970003-bcf9343191848103"></p><p><img src="D:\applicance\essential\typora\img\动态绑定\5970003-9baedd55881a39dd.png" alt="5970003-9baedd55881a39dd"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/09/02/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/09/02/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>[TOC]</p><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><p><a href="https://blog.csdn.net/pangc2014/article/details/117407413">Ubuntu20.04安装python2和python3及版本配置</a></p><h3 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h3><h4 id="qemu"><a href="#qemu" class="headerlink" title="qemu"></a>qemu</h4><p>由于直接用apt下载的版本太旧了，所以用源码编译的形式下载，进入<a href="https://www.qemu.org/download">qemu官网</a>下载源码</p><p>先下载一些依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装re2c和ninja(小型编译器)</span></span><br><span class="line">apt install re2c</span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/gitmirror/ninja.git</span><br><span class="line">./configure.py --bootstrap</span><br><span class="line">cp ./ninja /usr/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#各种依赖</span></span><br><span class="line">sudo apt-get install build-essential zlib1g-dev pkg-config libglib2.0-dev binutils-dev libboost-all-dev autoconf libtool libssl-dev libpixman-1-dev libpython-dev python-pip python-capstone virtualenv</span><br><span class="line"></span><br><span class="line">pip3 install --user meson</span><br></pre></td></tr></table></figure><p>开始安装qemu</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xvJf qemu-6.1.0.tar.xz</span><br><span class="line"><span class="built_in">cd</span> qemu-6.1.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="pwntools"><a href="#pwntools" class="headerlink" title="pwntools"></a>pwntools</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pwntools pip -i https://pypi.douban.com/simple</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="交叉编译工具"><a href="#交叉编译工具" class="headerlink" title="交叉编译工具"></a>交叉编译工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install g++-aarch64-linux-gnu </span><br></pre></td></tr></table></figure><h3 id="Sublime-Text3"><a href="#Sublime-Text3" class="headerlink" title="Sublime Text3"></a>Sublime Text3</h3><p>直接在<a href="http://www.sublimetext.com/3">官网</a>里面就有安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo apt-get install apt-transport-https</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb https://download.sublimetext.com/ apt/stable/&quot;</span> | sudo tee /etc/apt/sources.list.d/sublime-text.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install sublime-text</span><br></pre></td></tr></table></figure><h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh</span><br><span class="line"></span><br><span class="line">sudo vim /etc/passwd<span class="comment">#换成zsh</span></span><br><span class="line"><span class="comment">#oh-my-zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span><span class="comment">#都是用run.sh来装...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><p><a href="https://blog.csdn.net/jiesunliu3215/article/details/109283427?ops_request_misc=&request_id=&biz_id=102&utm_term=ubuntu%20%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E5%B1%8F%E5%B9%95%E5%88%86%E8%BE%A8%E7%8E%87&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-6-109283427.pc_search_result_control_group&spm=1018.2226.3001.4187">Ubuntu16.04如何调整屏幕分辨率至1920*1080</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
